<project name='GitLink' basedir='..'>

	<property name='component' value='${ant.project.name}' />
	<property name='system_id' value='### Must be set by Jenkins ###' />

	<property name='app.name' value='${component}' />
	<property name='inputDir' value='${basedir}/${app.name}/Documentation' />
	<property name='language' value='English' />

	<property environment='env' />
	<import file='${env.RE_ANTLIBRARY_HOME}/ant-lib.xml' />

	<target name='Documentation.GitLink.postbuild' extensionOf='Documentation.postbuild'>

		<mathematica exe="${mathExe}" fresh="true" quit="true"><![CDATA[

			Unset[$MessagePrePrint];

			PrependTo[$Path, FileNameJoin[AntProperty["appPath"]]];
			Quiet[
				(* NOTE: Use AbsoluteFileName to workaround bug #406366 *)
				PacletDirectoryAdd[AbsoluteFileName[AntProperty["appPath"]]],
				PacletDirectoryAdd::expobs
			];

			Needs["DocumentationBuild`SystemResourcesFromDocs`"];

			Module[{src, dest},
				src = FileNameJoin[{AntProperty["checkout_directory"], "GitLink", "GitLink"}];
				dest = FileNameJoin[{AntProperty["scratch_directory"], "Usage"}];
				ExportOnlineResourceFiles[src, dest, AntProperty["language"]];
			]
		]]></mathematica>

	</target>

	<target name='Documentation.GitLink.artifacts.custom' extensionOf='Documentation.artifacts.custom'>

		<zip destfile='${output_directory}/${env.JOB_NAME}_Usage.zip' whenempty='fail'>
			<zipfileset dir='${scratch_directory}/Usage' />
		</zip>

	</target>

	<target name='NativeLibrary.GitLink.execute' extensionOf='NativeLibrary.execute'>

		<mathematica
			exe='${mathExe}'
			fresh='true'
			quit='true'
			runfile='${basedir}${file.separator}scripts${file.separator}re_build_GitLink.wl'
			/>

	</target>

</project>
